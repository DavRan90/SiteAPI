// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteAPI.Models;

#nullable disable

namespace SiteAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250610061802_AddedMenuLinks")]
    partial class AddedMenuLinks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiteAPI.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "content");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("ElementType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "elementType");

                    b.PrimitiveCollection<string>("MenuLinks")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "menuLink");

                    b.PrimitiveCollection<string>("MenuTitles")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "menuTitles");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "position");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "siteId");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Elements");

                    b.HasDiscriminator().HasValue("Element");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SiteAPI.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FontColorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontFamilyString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("SiteAPI.Models.Menu", b =>
                {
                    b.HasBaseType("SiteAPI.Models.Element");

                    b.PrimitiveCollection<string>("MenuLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTitles")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Menu");
                });

            modelBuilder.Entity("SiteAPI.Models.Element", b =>
                {
                    b.HasOne("SiteAPI.Models.Site", null)
                        .WithMany("Elements")
                        .HasForeignKey("SiteId");
                });

            modelBuilder.Entity("SiteAPI.Models.Site", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
